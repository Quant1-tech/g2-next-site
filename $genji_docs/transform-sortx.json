{"markdown":"# SortX\n\n**SortX** 对 x 比例尺的定义域（Domain）进行排序，一般用于离散的比例尺（序数比例尺）。可以理解为将几何元素按照 x 通道的值进行分组，然后根据指定的通道和聚合函数聚合得到后的值进行排序。目前支持的聚合函数如下：\n\n- _max_ - 根据每组的最大值排序\n- _min_ - 根据每组的最小值排序\n- _sum_ - 根据每组值的和排序\n- _first_ - 根据每组第一个值排序\n- _last_ - 根据每组最后一个值排序\n- _a function_ - 根据该聚合函数返回的值排序\n\n## 开始\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    paddingLeft: 50,\n  });\n\n  chart\n    .interval()\n    .data({\n      type: 'fetch',\n      value:\n        'https://gw.alipayobjects.com/os/bmw-prod/0afdce89-c103-479d-91f4-6cf604bcf200.json',\n    })\n    // 条按照 y 通道值之和排序，默认为升序\n    .transform({ type: 'sortX', channel: 'y', reducer: 'sum' })\n    .transform({ type: 'stackY' })\n    .encode('x', 'date')\n    .encode('y', 'deaths')\n    .encode('color', 'cause')\n    .axis('x', {\n      tickFormatter: (d) =>\n        `${new Date(d).toLocaleString('en', { month: 'narrow' })}`,\n    })\n    .axis('y', { tickFormatter: '~s' });\n\n  return chart.render().node();\n})();\n```\n\n## 选项\n\n| 参数    | 说明                      | 类型                         | 默认值  |\n| ------- | ------------------------- | ---------------------------- | ------- |\n| reverse | 是否降序排序              | `boolean`                    | `false` |\n| by      | 排序依据的通道            | `string`                     | `'y'`   |\n| reducer | 聚合每一组值的函数        | `'max' \\| 'min' \\| Reducer ` | `'max'` |\n| slice   | 对 x 比例尺定义域进行截取 | `number \\| [number, number]` | -       |\n\n## 案例\n\nSortX 还具有对数据进行筛选的功能，比如只想展示 Top5 的数据。\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    paddingLeft: 50,\n  });\n\n  chart\n    .interval()\n    .data({\n      type: 'fetch',\n      value:\n        'https://gw.alipayobjects.com/os/bmw-prod/0afdce89-c103-479d-91f4-6cf604bcf200.json',\n    })\n    .transform({\n      type: 'sortX',\n      by: 'y',\n      reducer: 'sum',\n      reverse: true, // 降序排序\n      slice: 5, // 只展示前 5 组数据\n    })\n    .encode('x', 'date')\n    .encode('y', 'deaths')\n    .encode('color', 'cause')\n    .encode('series', 'cause')\n    .axis('x', {\n      tickFormatter: (d) =>\n        `${new Date(d).toLocaleString('en', { month: 'narrow' })}`,\n    })\n    .axis('y', { tickFormatter: '~s' });\n\n  return chart.render().node();\n})();\n```\n\n## FAQ\n\n> SortX 和数据转换 SortBy 的区别？\n\n- SortBy 是对原始数据进行排序，但是 SorX 是对 x 比例尺的定义域进行排序。\n- SortX 的能力更加强大，它可以对元素先分组再排序，SortBy 只对单个数据进行排序。\n"}