{"markdown":"# Data\n\n## Fetch\n\n**Fetch with `json` format.**\n\n```js\n(() => {\n  const chart = new G2.Chart();\n\n  chart\n    .interval()\n    .data({\n      type: 'fetch',\n      value: 'https://gw.alipayobjects.com/os/bmw-prod/ce45e3d7-ba78-4a08-b411-28df40ef9b7f.json',\n    })\n    .encode('x', 'genre')\n    .encode('y', 'sold');\n\n  return chart.render().node();\n})();\n```\n\n**Fetch with `csv` format.**\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    width: 760,\n    height: 760,\n    paddingLeft: 84,\n    paddingRight: 0,\n  });\n\n  chart\n    .cell()\n    .data({\n      type: 'fetch',\n      value: 'https://gw.alipayobjects.com/os/bmw-prod/87092954-aed4-48b2-93ba-b07b255f04a2.csv',\n      format: 'csv',\n      autoType: true\n    })\n    .encode('x', 'to')\n    .encode('y', 'from')\n    .encode('color', 'weight')\n    .scale('x', { guide: { label: { style: { fontSize: 10 } }, cell: {} } })\n    .scale('y', { guide: { label: { style: { fontSize: 10 } }, cell: {} } })\n    .scale('color', {\n      type: 'quantile',\n      range: ['#ebedf0', '#9be9a8', '#40c463', '#30a14e', '#216e39'],\n      guide: null,\n    });\n\n  return chart.render().node();\n})();\n```\n\n## SortBy\n\n```js\n(() => {\n  const chart = new G2.Chart();\n\n  chart\n    .interval()\n    .data({\n      value: [\n        { genre: 'Sports', sold: 275 },\n        { genre: 'Strategy', sold: 115 },\n        { genre: 'Action', sold: 120 },\n        { genre: 'Shooter', sold: 350 },\n        { genre: 'Other', sold: 150 },\n      ],\n      transform: [{ type: 'sortBy', fields: ['sold'] }],\n    })\n    .encode('x', 'genre')\n    .encode('y', 'sold');\n\n  return chart.render().node();\n})();\n```\n\n## FilterBy\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    width: 720,\n    paddingLeft: 60,\n  });\n\n  chart.coordinate({ type: 'parallel' });\n\n  chart\n    .line()\n    .data({\n      type: 'fetch',\n      value: 'https://gw.alipayobjects.com/os/bmw-prod/96cd81b5-54a4-4fe8-b778-502b2114df58.json',\n      autoType: true,\n      transform: [\n        {\n          type: 'filterBy',\n          // Filter data with defined Horsepower and Miles_per_Gallon.\n          fields: ['Horsepower', 'Miles_per_Gallon'],\n        },\n      ],\n    })\n    .encode('position', [\n      'Cylinders',\n      'Displacement',\n      'Weight_in_lbs',\n      'Horsepower',\n      'Acceleration',\n      'Miles_per_Gallon',\n      'Year',\n    ])\n    .encode('color', 'Origin')\n    .encode('size', 1.01)\n    .style('strokeOpacity', 0.3)\n    // zIndex of mark is default to 0.\n    // zIndex of component is default to -1.\n    // Set zIndex to 1 for component to draw above marks.\n    .scale('position', { nice: true, guide: { zIndex: 1 } })\n    .scale('position1', { nice: true, guide: { zIndex: 1 } })\n    .scale('position2', { nice: true, guide: { zIndex: 1 } })\n    .scale('position3', { nice: true, guide: { zIndex: 1 } })\n    .scale('position4', { nice: true, guide: { zIndex: 1 } })\n    .scale('position5', { nice: true, guide: { zIndex: 1 } });\n\n  return chart.render().node();\n})();\n```\n"}