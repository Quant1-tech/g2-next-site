{"markdown":"# Component\n\n## Title\n\n```js\nG2.render({\n  title: 'Basic usage.',\n  type: 'interval',\n  data: [\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 350 },\n    { genre: 'Other', sold: 150 },\n  ],\n  encode: {\n    x: 'genre',\n    y: 'sold',\n  },\n});\n```\n\n```js\nG2.render({\n  title: {\n    size: 60,\n    text: 'Title with subtitle and custom style.',\n    style: { fontSize: 18 },\n    subtitle: 'Description of chart.',\n    subtitleStyle: { fill: 'grey' },\n  },\n  type: 'interval',\n  data: [\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 350 },\n    { genre: 'Other', sold: 150 },\n  ],\n  scale: { color: { guide: { title: null } } },\n  encode: {\n    x: 'genre',\n    y: 'sold',\n  },\n});\n```\n\n## Legend\n\n> Legend component will be infer to generate for a **color** scale.\n> If the scale is ordinal or categorical, by default the legend appears as a categorical legend, otherwise the legend appears as a continuous if the scale is linear.\n\n### Categorical legend\n\n**Basic categorical legend.**\n\n```js\nG2.render({\n  type: 'interval',\n  data: [\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 350 },\n    { genre: 'Other', sold: 150 },\n  ],\n  encode: {\n    x: 'genre',\n    y: 'sold',\n    color: 'genre',\n  },\n});\n```\n\n**Custom legend.**\n\n```js\nG2.render({\n  type: 'area',\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/e58c9758-0a09-4527-aa90-fbf175b45925.json',\n    },\n    { type: 'stackY' },\n    { type: 'normalizeY' },\n  ],\n  paddingTop: 72,\n  scale: {\n    x: { field: 'Date' },\n    color: {\n      guide: {\n        size: 72,\n        autoWrap: true,\n        maxRows: 3,\n        cols: 6,\n      },\n    },\n  },\n  encode: {\n    shape: 'smoothArea',\n    x: (d) => new Date(d.date),\n    y: 'unemployed',\n    color: 'industry',\n  },\n});\n```\n\n### Continuous legend\n\n```js\nG2.render({\n  type: 'interval',\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/antvdemo/assets/data/diamond.json',\n    },\n    {\n      type: 'groupX',\n      y: 'mean',\n    },\n  ],\n  paddingLeft: 60,\n  encode: {\n    x: 'clarity',\n    y: 'price',\n    color: 'price',\n  },\n});\n```\n\n## Axis\n\n### Axis title\n\n```js\nG2.render({\n  type: 'interval',\n  data: [\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 350 },\n    { genre: 'Other', sold: 150 },\n  ],\n  scale: {\n    x: {\n      guide: {\n        title: {\n          titleAnchor: 'end',\n          content: 'genre →',\n          style: { fontWeight: 'lighter' },\n        },\n      },\n    },\n    y: {\n      guide: {\n        title: {\n          // relative to axis line.\n          positionX: -8,\n          positionY: -12,\n          content: 'sold ↑',\n          rotate: 0,\n          style: { fontWeight: 'lighter' },\n        },\n      },\n    },\n  },\n  encode: {\n    x: 'genre',\n    y: 'sold',\n  },\n});\n```\n\n### Axis label\n\n```js\nG2.render({\n  height: 300,\n  width: 640,\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/antvdemo/assets/data/blockchain.json',\n    },\n    {\n      type: 'fold',\n      fields: ['blockchain', 'nlp'],\n      as: ['metric', 'value'],\n    },\n  ],\n  scale: {\n    x: {\n      guide: {\n        label: {\n          autoHide: 'greedy',\n          showLast: false,\n          style: (datum, idx, data) => {\n            const isYear = (d) => !Number.isNaN(Number(d));\n            return {\n              fontWeight: isYear(datum.text) ? 'bold' : 'lighter',\n            };\n          },\n        },\n      },\n    },\n    color: { guide: null },\n  },\n  type: 'line',\n  encode: {\n    x: (d) => new Date(d.date),\n    y: 'value',\n    color: 'metric',\n  },\n});\n```\n"}