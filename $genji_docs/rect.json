{"markdown":"# Facet\n\n## Row Facet\n\n> Add insert options for plot area to avoid outside circle for scatter?\n\n```js | dom\nG2.render({\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/a0f96c54-d1fa-46c8-b6ef-548e2f700a6d.json',\n    },\n  ],\n  type: 'rect',\n  width: 928,\n  height: 240,\n  paddingLeft: 50,\n  paddingBottom: 50,\n  encode: {\n    x: 'series',\n  },\n  children: [\n    {\n      type: 'point',\n      encode: {\n        x: 'x',\n        y: 'y',\n        shape: 'hollowPoint',\n      },\n    },\n  ],\n});\n```\n\n## Col Facet\n\n```js | dom\nG2.render({\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/90ec29b1-c939-434e-8bbb-ce5fa27c62a7.json',\n    },\n  ],\n  type: 'rect',\n  height: 800,\n  encode: {\n    y: 'site',\n  },\n  paddingLeft: 130,\n  paddingRight: 120,\n  paddingBottom: 60,\n  children: [\n    {\n      type: 'point',\n      scale: {\n        color: { type: 'ordinal' },\n      },\n      encode: {\n        x: 'yield',\n        y: 'variety',\n        color: 'year',\n        shape: 'hollowPoint',\n      },\n    },\n  ],\n});\n```\n\n## Rect Facet\n\n```js | dom\nG2.render({\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/3346929c-d7f4-4a81-8edc-c4c6d028ab96.json',\n    },\n  ],\n  type: 'rect',\n  paddingRight: 80,\n  paddingBottom: 50,\n  paddingLeft: 50,\n  height: 600,\n  encode: {\n    x: 'sex',\n    y: 'species',\n  },\n  children: [\n    {\n      type: 'point',\n      facet: false, // Do not filter data.\n      frame: false, // Do not draw frame for this view.\n      encode: {\n        x: 'culmen_depth_mm',\n        y: 'culmen_length_mm',\n        size: 2,\n      },\n      style: {\n        fill: '#ddd',\n      },\n    },\n    {\n      type: 'point',\n      encode: {\n        x: 'culmen_depth_mm',\n        y: 'culmen_length_mm',\n        shape: 'hollowPoint',\n        color: 'island',\n      },\n    },\n  ],\n});\n```\n\n## Calendar Interval\n\n```js\n(() => {\n  // Mock Data.\n  const days = ['Sun.', 'Mon.', 'Tues.', 'Wed.', 'Thur.', 'Fri.', 'Sat.'];\n  const mockData = () => {\n    const names = ['A', 'B', 'C'];\n    const week = (date) => {\n      const currentDate = date.getDate();\n      const newDate = new Date(date);\n      const firstDay = new Date(newDate.setDate(1)).getDay();\n      return Math.ceil((currentDate + firstDay) / 7);\n    };\n    const day = (date) => date.getDay();\n    return Array.from({ length: 30 }, (_, i) => {\n      const date = new Date(2022, 5, i + 1);\n      return names.map((name) => ({\n        activity: name,\n        value: Math.random(),\n        week: `${week(date)}`,\n        day: days[day(date)],\n      }));\n    }).flat(Infinity);\n  };\n\n  // Render Chart.\n  return G2.render({\n    type: 'rect',\n    data: mockData(),\n    encode: { x: 'day', y: 'week' },\n    scale: {\n      x: { domain: days },\n    },\n    children: [\n      {\n        type: 'interval',\n        encode: {\n          x: 'activity',\n          y: 'value',\n          color: 'activity',\n        },\n      },\n    ],\n  });\n})();\n```\n\n## Calendar Pie\n\n```js\n(() => {\n  // Mock Data.\n  const days = ['Sun.', 'Mon.', 'Tues.', 'Wed.', 'Thur.', 'Fri.', 'Sat.'];\n  const mockData = () => {\n    const names = ['Eat', 'Play', 'Sleep'];\n    const week = (date) => {\n      const currentDate = date.getDate();\n      const newDate = new Date(date);\n      const firstDay = new Date(newDate.setDate(1)).getDay();\n      return Math.ceil((currentDate + firstDay) / 7);\n    };\n    const day = (date) => date.getDay();\n    return Array.from({ length: 30 }, (_, i) => {\n      const date = new Date(2022, 5, i + 1);\n      return names.map((name) => ({\n        activity: name,\n        value: Math.random(),\n        week: `${week(date)}`,\n        day: days[day(date)],\n      }));\n    }).flat(Infinity);\n  };\n\n  // Render Chart.\n  return G2.render({\n    type: 'rect',\n    data: mockData(),\n    encode: { x: 'day', y: 'week' },\n    scale: {\n      x: { domain: days },\n      color: { guide: { position: 'right', size: 50 } },\n    },\n    paddingRight: 100,\n    title: 'The distribution of time for June 2022',\n    children: [\n      {\n        type: 'interval',\n        coordinate: [\n          { type: 'transpose' },\n          { type: 'polar', outerRadius: 0.9 },\n        ],\n        scale: {\n          // Do not sync y scales among facets.\n          y: { facet: false },\n        },\n        encode: {\n          y: 'value',\n          color: 'activity',\n        },\n      },\n    ],\n  });\n})();\n```\n\n## Facet Callback\n\n```js | dom\nG2.render({\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/3346929c-d7f4-4a81-8edc-c4c6d028ab96.json',\n    },\n  ],\n  type: 'rect',\n  paddingRight: 80,\n  paddingBottom: 50,\n  paddingLeft: 50,\n  height: 600,\n  encode: {\n    x: 'sex',\n    y: 'species',\n  },\n  children: (facet) => {\n    const { columnIndex, rowIndex } = facet;\n    return columnIndex !== rowIndex\n      ? {\n          type: 'point',\n          encode: {\n            x: 'culmen_depth_mm',\n            y: 'culmen_length_mm',\n            shape: 'hollowPoint',\n          },\n        }\n      : {\n          type: 'point',\n          encode: {\n            x: 'culmen_depth_mm',\n            y: 'culmen_length_mm',\n            shape: 'hollowPoint',\n            color: 'red',\n          },\n        };\n  },\n});\n```\n"}