{"markdown":"# Basic\n\n## Default Size\n\nThe default width equals to 640px, default height equals to 480px.\n\n```js | dom\n(() => {\n  // Don't specify size.\n  const chart = new G2.Chart();\n\n  chart\n    .interval()\n    .data([\n      { genre: 'Sports', sold: 275 },\n      { genre: 'Strategy', sold: 115 },\n      { genre: 'Action', sold: 120 },\n      { genre: 'Shooter', sold: 350 },\n      { genre: 'Other', sold: 150 },\n    ])\n    .encode('x', 'genre')\n    .encode('y', 'sold');\n\n  return chart.render().node();\n})();\n```\n\n## Specified Size\n\n```js | range \"pin: false; min: 300; max: 1000\"\nwidth = 800;\n```\n\n```js | range \"pin: false; min: 100; max: 500\"\nheight = 300;\n```\n\n```js | dom\n(() => {\n  const chart = new G2.Chart({\n    width, // Specify width.\n    height, // SPecify height.\n  });\n\n  chart\n    .interval()\n    .data([\n      { genre: 'Sports', sold: 275 },\n      { genre: 'Strategy', sold: 115 },\n      { genre: 'Action', sold: 120 },\n      { genre: 'Shooter', sold: 350 },\n      { genre: 'Other', sold: 150 },\n    ])\n    .encode('x', 'genre')\n    .encode('y', 'sold');\n\n  return chart.render().node();\n})();\n```\n\n## Padding\n\nThe padding will be inferred by components(e.g. axis, legend) if is not specified explicitly.\n\n```js | range \"pin: false; min: 0; max: 120\"\npaddingLeft = 80;\n```\n\n```js | range \"pin: false; min: 0; max: 120\"\npaddingRight = 80;\n```\n\n```js | range \"pin: false; min: 0; max: 120\"\npaddingBottom = 80;\n```\n\n```js | range \"pin: false; min: 0; max: 120\"\npaddingTop = 80;\n```\n\n```js | dom\n(() => {\n  const chart = new G2.Chart({\n    paddingTop, // Specify paddingTop.\n    paddingRight, // Specify paddingRight.\n    paddingBottom, // Specify paddingBottom.\n    paddingLeft, // Specify paddingLeft.\n  });\n\n  chart\n    .interval()\n    .data([\n      { genre: 'Sports', sold: 275 },\n      { genre: 'Strategy', sold: 115 },\n      { genre: 'Action', sold: 120 },\n      { genre: 'Shooter', sold: 350 },\n      { genre: 'Other', sold: 150 },\n    ])\n    .encode('x', 'genre')\n    .encode('y', 'sold');\n\n  return chart.render().node();\n})();\n```\n\n## Update Data\n\n> Currently do not support animate transition.\n\n```js\n(() => {\n  const chart = new G2.Chart({});\n  const data = [\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 350 },\n    { genre: 'Other', sold: 150 },\n  ];\n\n  const interval = chart\n    .interval()\n    .data(data)\n    .encode('x', 'genre')\n    .encode('y', 'sold')\n    .encode('color', 'genre');\n\n  chart.render();\n\n  const button = document.createElement('button');\n  button.innerText = 'Update Data';\n  button.style.marginBottom = '10px';\n  button.onclick = () => {\n    // Update data of the interval.\n    const shuffle = (array) => array.sort((a, b) => Math.random() - 1);\n    interval.data(shuffle(data));\n\n    // Rerender the chart.\n    chart.render();\n  };\n\n  const div = document.createElement('div');\n  div.appendChild(button);\n  div.appendChild(chart.node());\n  return div;\n})();\n```\n"}