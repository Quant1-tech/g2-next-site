{"markdown":"# Square\n\n## Row Square\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    width: 928,\n    height: 240,\n    paddingLeft: 50,\n    paddingBottom: 50,\n  });\n\n  const square = chart\n    .square()\n    .data({\n      type: 'fetch',\n      value: 'https://gw.alipayobjects.com/os/bmw-prod/a0f96c54-d1fa-46c8-b6ef-548e2f700a6d.json',\n    })\n    .encode('x', 'series');\n\n  square.point().encode('x', 'x').encode('y', 'y').encode('shape', 'hollow');\n\n  return chart.render().node();\n})();\n```\n\n## Col Square\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    height: 800,\n    paddingLeft: 130,\n    paddingRight: 120,\n    paddingBottom: 60,\n  });\n\n  const square = chart\n    .square()\n    .data({\n      type: 'fetch',\n      value: 'https://gw.alipayobjects.com/os/bmw-prod/90ec29b1-c939-434e-8bbb-ce5fa27c62a7.json',\n    })\n    .encode('y', 'site');\n\n  square\n    .point()\n    .encode('x', 'yield')\n    .encode('y', 'variety')\n    .encode('color', 'year')\n    .encode('shape', 'hollow')\n    .scale('color', { type: 'ordinal' });\n\n  return chart.render().node();\n})();\n```\n\n## Both Square\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    paddingRight: 80,\n    paddingBottom: 50,\n    paddingLeft: 50,\n    height: 600,\n  });\n  const xy = (node) => {\n    node.encode('x', 'culmen_depth_mm').encode('y', 'culmen_length_mm');\n  };\n\n  const square = chart\n    .square()\n    .data({\n      type: 'fetch',\n      value: 'https://gw.alipayobjects.com/os/bmw-prod/3346929c-d7f4-4a81-8edc-c4c6d028ab96.json',\n    })\n    .encode('x', 'sex')\n    .encode('y', 'species');\n\n  square\n    .point()\n    .facet(false)\n    .frame(false)\n    .call(xy)\n    .encode('size', 2)\n    .style('fill', '#ddd');\n\n  square\n    .point()\n    .call(xy)\n    .encode('shape', 'hollow')\n    .encode('color', 'island');\n\n  return chart.render().node();\n})();\n```\n\n## Calendar Interval\n\n```js\n(() => {\n  // Mock Data.\n  const days = ['Sun.', 'Mon.', 'Tues.', 'Wed.', 'Thur.', 'Fri.', 'Sat.'];\n  const mockData = () => {\n    const names = ['A', 'B', 'C'];\n    const week = (date) => {\n      const currentDate = date.getDate();\n      const newDate = new Date(date);\n      const firstDay = new Date(newDate.setDate(1)).getDay();\n      return Math.ceil((currentDate + firstDay) / 7);\n    };\n    const day = (date) => date.getDay();\n    return Array.from({ length: 30 }, (_, i) => {\n      const date = new Date(2022, 5, i + 1);\n      return names.map((name) => ({\n        activity: name,\n        value: Math.random(),\n        week: `${week(date)}`,\n        day: days[day(date)],\n      }));\n    }).flat(Infinity);\n  };\n  const chart = new G2.Chart();\n\n  const square = chart\n    .square()\n    .data(mockData())\n    .encode('x', 'day')\n    .encode('y', 'week')\n    .scale('x', { domain: days });\n\n  square\n    .interval()\n    .encode('x', 'activity')\n    .encode('y', 'value')\n    .encode('color', 'activity');\n\n  return chart.render().node();\n})();\n```\n\n## Calendar Pie\n\n```js\n(() => {\n  // Mock Data.\n  const days = ['Sun.', 'Mon.', 'Tues.', 'Wed.', 'Thur.', 'Fri.', 'Sat.'];\n  const mockData = () => {\n    const names = ['Eat', 'Play', 'Sleep'];\n    const week = (date) => {\n      const currentDate = date.getDate();\n      const newDate = new Date(date);\n      const firstDay = new Date(newDate.setDate(1)).getDay();\n      return Math.ceil((currentDate + firstDay) / 7);\n    };\n    const day = (date) => date.getDay();\n    return Array.from({ length: 30 }, (_, i) => {\n      const date = new Date(2022, 5, i + 1);\n      return names.map((name) => ({\n        activity: name,\n        value: Math.random(),\n        week: `${week(date)}`,\n        day: days[day(date)],\n      }));\n    }).flat(Infinity);\n  };\n  const chart = new G2.Chart({\n    paddingRight: 100,\n  });\n\n  const square = chart\n    .square()\n    .data(mockData())\n    .encode('x', 'day')\n    .encode('y', 'week')\n    .scale('x', { domain: days })\n    .scale('color', { guide: { position: 'right', size: 50 } });\n\n  square\n    .view()\n    .coordinate({ type: 'transpose' })\n    .coordinate({ type: 'polar', outerRadius: 0.9 })\n    .interval()\n    .encode('y', 'value')\n    .encode('color', 'activity')\n    .scale('y', { facet: false });\n\n  return chart.render().node();\n})();\n```\n\n<!-- ## Facet Callback -->\n\n<!-- G2.render({\n  transform: [\n    {\n      type: 'fetch',\n      value: 'https://gw.alipayobjects.com/os/bmw-prod/3346929c-d7f4-4a81-8edc-c4c6d028ab96.json',\n    },\n  ],\n  type: 'square',\n  paddingRight: 80,\n  paddingBottom: 50,\n  paddingLeft: 50,\n  height: 600,\n  encode: {\n    x: 'sex',\n    y: 'species',\n  },\n  children: (facet) => {\n    const { columnIndex, rowIndex } = facet;\n    return columnIndex !== rowIndex\n      ? {\n          type: 'point',\n          encode: {\n            x: 'culmen_depth_mm',\n            y: 'culmen_length_mm',\n            shape: 'hollowPoint',\n          },\n        }\n      : {\n          type: 'point',\n          encode: {\n            x: 'culmen_depth_mm',\n            y: 'culmen_length_mm',\n            shape: 'hollowPoint',\n            color: 'red',\n          },\n        };\n  },\n}); -->\n"}