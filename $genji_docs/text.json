{"markdown":"# Text\n\n## Basic Text\n\n```js | dom\nG2.render({\n  type: 'view',\n  data: [\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 350 },\n    { genre: 'Other', sold: 150 },\n  ],\n  children: [\n    {\n      type: 'interval',\n      encode: {\n        x: 'genre',\n        y: 'sold',\n        color: 'genre',\n      },\n    },\n    {\n      type: 'text',\n      encode: {\n        x: 'genre',\n        y: 'sold',\n        text: 'sold',\n      },\n      style: {\n        fill: 'black',\n        textAlign: 'center',\n        dy: -5,\n      },\n    },\n  ],\n});\n```\n\n## WordCloud\n\n```js\n(() => {\n  const width = 640;\n  const height = 480;\n  const words = () => {\n    return ({ data }) => ({\n      data: data.flatMap((d) =>\n        d.words.map(({ weight, word }) => ({\n          value: weight,\n          text: word,\n          name: d.name,\n        })),\n      ),\n    });\n  };\n  const layout = () => {\n    return async ({ data }) => {\n      return new Promise((resolve) =>\n        cloud()\n          .size([width, height])\n          .words(data)\n          .padding(2)\n          .rotate(() => ~~(Math.random() * 2) * 90)\n          .fontSize((d) => d.value * 2)\n          .on('end', (data) => resolve({ data }))\n          .start(),\n      );\n    };\n  };\n  return G2.render({\n    type: 'text',\n    width,\n    height,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    paddingBottom: 0,\n    transform: [\n      {\n        type: 'fetch',\n        url: 'https://gw.alipayobjects.com/os/bmw-prod/d345d2d7-a35d-4d27-af92-4982b3e6b213.json',\n      },\n      { type: words },\n      { type: layout },\n    ],\n    scale: {\n      x: { domain: [-width / 2, width / 2], guide: null },\n      y: { domain: [-height / 2, height / 2], guide: null, range: [0, 1] },\n      fontSize: { type: 'identity' },\n      rotate: { type: 'identity' },\n      tooltip: { field: 'value' },\n    },\n    encode: {\n      x: 'x',\n      y: 'y',\n      text: 'text',\n      color: 'black',\n      rotate: 'rotate',\n      fontSize: 'size',\n      title: 'name',\n      tooltip: (d) => d.value.toFixed(2),\n    },\n    style: {\n      textAlign: 'center',\n    },\n  });\n})();\n```\n\n## Dependance\n\n```js | dom \"pin: false\"\ncloud = genji.require('d3-cloud');\n```\n"}