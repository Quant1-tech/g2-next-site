{"markdown":"# Coordinate\n\n## Cartesian\n\nCartesian coordinate will append to coordinate if is not specified.\n\n```js | dom\nG2.render({\n  type: 'interval',\n  data: [\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 350 },\n    { genre: 'Other', sold: 150 },\n  ],\n  encode: {\n    x: 'genre',\n    y: 'sold',\n    color: 'genre',\n  },\n});\n```\n\n## Polar\n\n```js | dom\nG2.render({\n  type: 'interval',\n  data: [\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 350 },\n    { genre: 'Other', sold: 150 },\n  ],\n  coordinate: [{ type: 'polar' }],\n  scale: { x: { padding: 0.05 }, y: { guide: null } },\n  encode: {\n    x: 'genre',\n    y: 'sold',\n    color: 'genre',\n  },\n  style: {\n    radius: 10,\n  },\n});\n```\n\n## Transpose\n\n```js | dom\nG2.render({\n  type: 'interval',\n  paddingLeft: 80,\n  data: [\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 350 },\n    { genre: 'Other', sold: 150 },\n  ],\n  coordinate: [{ type: 'transpose' }],\n  encode: {\n    x: 'genre',\n    y: 'sold',\n    color: 'genre',\n  },\n});\n```\n\n## Parallel\n\n```js | dom\nG2.render({\n  type: 'line',\n  width: 720,\n  paddingLeft: 80,\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/96cd81b5-54a4-4fe8-b778-502b2114df58.json',\n      callback: (d) => Object.assign(d, { Year: new Date(d.Year) }),\n    },\n    {\n      type: 'filterBy',\n      // Filter data with defined Horsepower and Miles_per_Gallon.\n      fields: ['Horsepower', 'Miles_per_Gallon'],\n    },\n  ],\n  coordinate: [{ type: 'parallel' }],\n  scale: {\n    // zIndex of mark is default to 0.\n    // zIndex of component is default to -1.\n    // Set zIndex to 1 for component to draw above marks.\n    position: { nice: true, guide: { zIndex: 1 } },\n    position1: { nice: true, guide: { zIndex: 1 } },\n    position2: { nice: true, guide: { zIndex: 1 } },\n    position3: { nice: true, guide: { zIndex: 1 } },\n    position4: { nice: true, guide: { zIndex: 1 } },\n    position5: { nice: true, guide: { zIndex: 1 } },\n  },\n  encode: {\n    position: [\n      'Cylinders',\n      'Displacement',\n      'Weight_in_lbs',\n      'Horsepower',\n      'Acceleration',\n      'Miles_per_Gallon',\n      'Year',\n    ],\n    color: 'Origin',\n    size: 1.01,\n  },\n  style: {\n    strokeOpacity: 0.3,\n  },\n});\n```\n\n## Fisheye\n\nFisheye coordinate must be specified after cartesian coordinate.\n\n```js | dom\nG2.render({\n  type: 'point',\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/antvdemo/assets/data/bubble.json',\n    },\n  ],\n  scale: {\n    size: { type: 'log', range: [4, 20] },\n    y: { field: 'Life' },\n    x: { guide: { label: { autoHide: true } } },\n  },\n  coordinate: [\n    { type: 'cartesian' },\n    { type: 'fisheye', focusX: 50, focusY: 50 },\n  ],\n  encode: {\n    x: 'GDP',\n    y: 'LifeExpectancy',\n    size: 'Population',\n    color: 'continent',\n  },\n  style: {\n    fillOpacity: 0.3,\n    lineWidth: 1,\n  },\n});\n```\n"}