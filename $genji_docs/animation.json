{"markdown":"# Animation\n\n## TimeEffect\n\n```js | dom\nG2.render({\n  type: 'interval',\n  data: [\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 350 },\n    { genre: 'Other', sold: 150 },\n  ],\n  encode: {\n    x: 'genre',\n    y: 'sold',\n    color: 'genre',\n  },\n  animate: {\n    enter: {\n      duration: 1000, //  Specify effect time by animate options.\n      delay: 300,\n    },\n  },\n});\n```\n\n## Animation Type\n\n```js | dom\nG2.render({\n  type: 'interval',\n  data: [\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 350 },\n    { genre: 'Other', sold: 150 },\n  ],\n  encode: {\n    x: 'genre',\n    y: 'sold',\n    color: 'genre',\n  },\n  animate: {\n    enter: {\n      type: 'fadeIn', //  Specify animation type.\n      duration: 2000,\n    },\n  },\n});\n```\n\n## Encode EnterType\n\n```js | dom\nG2.render({\n  type: 'interval',\n  data: [\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 350 },\n    { genre: 'Other', sold: 150 },\n  ],\n  scale: {\n    enterType: { range: ['scaleInY', 'fadeIn'] }, // Specify animation types.\n  },\n  encode: {\n    x: 'genre',\n    y: 'sold',\n    color: 'genre',\n    enterType: (d) => (d.sold > 200 ? 'high' : 'low'),\n  },\n  animate: {\n    enter: {\n      duration: 3000,\n    },\n  },\n});\n```\n\n```js | dom\nG2.render({\n  type: 'interval',\n  data: [\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 350 },\n    { genre: 'Other', sold: 150 },\n  ],\n  scale: {\n    enterType: { type: 'identity' },\n  },\n  encode: {\n    x: 'genre',\n    y: 'sold',\n    color: 'genre',\n    enterType: (d) => (d.sold > 200 ? 'scaleInY' : 'fadeIn'),\n  },\n  animate: {\n    enter: {\n      duration: 3000,\n    },\n  },\n});\n```\n\n## Encode EnterDelay and EnterDuration\n\n```js | dom\nG2.render({\n  type: 'interval',\n  width: 720,\n  data: [\n    { name: 'event planning', startTime: 1, endTime: 4 },\n    { name: 'layout logistics', startTime: 3, endTime: 13 },\n    { name: 'select vendors', startTime: 5, endTime: 8 },\n    { name: 'hire venue', startTime: 9, endTime: 13 },\n    { name: 'hire caterer', startTime: 10, endTime: 14 },\n    { name: 'hire event decorators', startTime: 12, endTime: 17 },\n    { name: 'rehearsal', startTime: 14, endTime: 16 },\n    { name: 'event celebration', startTime: 17, endTime: 18 },\n  ],\n  paddingTop: 60,\n  paddingLeft: 100,\n  coordinate: [{ type: 'transpose' }],\n  scale: {\n    // All the intervals will show up in 10s.\n    // But the animation will take more than 10s to finish.\n    enter: { range: [0, 10000], zero: true },\n    color: { guide: { size: 60, autoWrap: true, maxRows: 2, cols: 5 } },\n  },\n  encode: {\n    x: 'name',\n    y: ['endTime', 'startTime'],\n    color: 'name',\n    // The appear time of interval is linearly related to startTime.\n    enterDelay: 'startTime',\n    // The duration of interval animation is linearly related to duration time.\n    enterDuration: (d) => d.endTime - d.startTime,\n  },\n});\n```\n"}