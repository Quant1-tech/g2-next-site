{"markdown":"# Statistic\n\n## StackY\n\nStackY will be inferred if color channel is specified.\n\n```js | dom\nG2.render({\n  type: 'interval',\n  data: [\n    { city: 'London', month: 'Jan.', rainfall: 18.9 },\n    { city: 'London', month: 'Feb.', rainfall: 28.8 },\n    { city: 'London', month: 'Mar.', rainfall: 39.3 },\n    { city: 'London', month: 'Apr.', rainfall: 81.4 },\n    { city: 'London', month: 'May', rainfall: 47 },\n    { city: 'London', month: 'Jun.', rainfall: 20.3 },\n    { city: 'London', month: 'Jul.', rainfall: 24 },\n    { city: 'London', month: 'Aug.', rainfall: 35.6 },\n    { city: 'Berlin', month: 'Jan.', rainfall: 12.4 },\n    { city: 'Berlin', month: 'Feb.', rainfall: 23.2 },\n    { city: 'Berlin', month: 'Mar.', rainfall: 34.5 },\n    { city: 'Berlin', month: 'Apr.', rainfall: 99.7 },\n    { city: 'Berlin', month: 'May', rainfall: 52.6 },\n    { city: 'Berlin', month: 'Jun.', rainfall: 35.5 },\n    { city: 'Berlin', month: 'Jul.', rainfall: 37.4 },\n    { city: 'Berlin', month: 'Aug.', rainfall: 42.4 },\n  ],\n  encode: {\n    x: 'month',\n    y: 'rainfall',\n    color: 'city',\n  },\n});\n```\n\nStackY can also be specified explicitly.\n\n```js | dom\nG2.render({\n  type: 'interval',\n  data: [\n    { city: 'London', month: 'Jan.', rainfall: 18.9 },\n    { city: 'London', month: 'Feb.', rainfall: 28.8 },\n    { city: 'London', month: 'Mar.', rainfall: 39.3 },\n    { city: 'London', month: 'Apr.', rainfall: 81.4 },\n    { city: 'London', month: 'May', rainfall: 47 },\n    { city: 'London', month: 'Jun.', rainfall: 20.3 },\n    { city: 'London', month: 'Jul.', rainfall: 24 },\n    { city: 'London', month: 'Aug.', rainfall: 35.6 },\n    { city: 'Berlin', month: 'Jan.', rainfall: 12.4 },\n    { city: 'Berlin', month: 'Feb.', rainfall: 23.2 },\n    { city: 'Berlin', month: 'Mar.', rainfall: 34.5 },\n    { city: 'Berlin', month: 'Apr.', rainfall: 99.7 },\n    { city: 'Berlin', month: 'May', rainfall: 52.6 },\n    { city: 'Berlin', month: 'Jun.', rainfall: 35.5 },\n    { city: 'Berlin', month: 'Jul.', rainfall: 37.4 },\n    { city: 'Berlin', month: 'Aug.', rainfall: 42.4 },\n  ],\n  transform: [{ type: 'stackY' }],\n  encode: {\n    x: 'month',\n    y: 'rainfall',\n    color: 'city',\n  },\n});\n```\n\n## DodgeX\n\nDodgeX will be inferred if series channel is specified. In this case, StackY will not be inferred.\n\n```js | dom\nG2.render({\n  type: 'interval',\n  data: [\n    { city: 'London', month: 'Jan.', rainfall: 18.9 },\n    { city: 'London', month: 'Feb.', rainfall: 28.8 },\n    { city: 'London', month: 'Mar.', rainfall: 39.3 },\n    { city: 'London', month: 'Apr.', rainfall: 81.4 },\n    { city: 'London', month: 'May', rainfall: 47 },\n    { city: 'London', month: 'Jun.', rainfall: 20.3 },\n    { city: 'London', month: 'Jul.', rainfall: 24 },\n    { city: 'London', month: 'Aug.', rainfall: 35.6 },\n    { city: 'Berlin', month: 'Jan.', rainfall: 12.4 },\n    { city: 'Berlin', month: 'Feb.', rainfall: 23.2 },\n    { city: 'Berlin', month: 'Mar.', rainfall: 34.5 },\n    { city: 'Berlin', month: 'Apr.', rainfall: 99.7 },\n    { city: 'Berlin', month: 'May', rainfall: 52.6 },\n    { city: 'Berlin', month: 'Jun.', rainfall: 35.5 },\n    { city: 'Berlin', month: 'Jul.', rainfall: 37.4 },\n    { city: 'Berlin', month: 'Aug.', rainfall: 42.4 },\n  ],\n  encode: {\n    x: 'month',\n    y: 'rainfall',\n    color: 'city',\n    series: 'city',\n  },\n});\n```\n\nDodgeX can also be specified explicitly.\n\n```js | dom\nG2.render({\n  type: 'interval',\n  data: [\n    { city: 'London', month: 'Jan.', rainfall: 18.9 },\n    { city: 'London', month: 'Feb.', rainfall: 28.8 },\n    { city: 'London', month: 'Mar.', rainfall: 39.3 },\n    { city: 'London', month: 'Apr.', rainfall: 81.4 },\n    { city: 'London', month: 'May', rainfall: 47 },\n    { city: 'London', month: 'Jun.', rainfall: 20.3 },\n    { city: 'London', month: 'Jul.', rainfall: 24 },\n    { city: 'London', month: 'Aug.', rainfall: 35.6 },\n    { city: 'Berlin', month: 'Jan.', rainfall: 12.4 },\n    { city: 'Berlin', month: 'Feb.', rainfall: 23.2 },\n    { city: 'Berlin', month: 'Mar.', rainfall: 34.5 },\n    { city: 'Berlin', month: 'Apr.', rainfall: 99.7 },\n    { city: 'Berlin', month: 'May', rainfall: 52.6 },\n    { city: 'Berlin', month: 'Jun.', rainfall: 35.5 },\n    { city: 'Berlin', month: 'Jul.', rainfall: 37.4 },\n    { city: 'Berlin', month: 'Aug.', rainfall: 42.4 },\n  ],\n  transform: [{ type: 'dodgeX' }],\n  encode: {\n    x: 'month',\n    y: 'rainfall',\n    color: 'city',\n    series: 'city',\n  },\n});\n```\n\n## Multiple Statistic\n\nStackY and DodgeX can be both inferred.\n\n```js | dom\nG2.render({\n  type: 'interval',\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/antfincdn/mor%26R5yBI9/stack-group-column.json',\n    },\n  ],\n  encode: {\n    x: 'product_type',\n    y: 'order_amt',\n    color: 'product_sub_type',\n    series: 'sex',\n  },\n});\n```\n\n```js | dom\nG2.render({\n  type: 'interval',\n  data: [\n    { city: 'London', month: 'Jan.', rainfall: 18.9 },\n    { city: 'London', month: 'Feb.', rainfall: 28.8 },\n    { city: 'London', month: 'Mar.', rainfall: 39.3 },\n    { city: 'London', month: 'Apr.', rainfall: 81.4 },\n    { city: 'London', month: 'May', rainfall: 47 },\n    { city: 'London', month: 'Jun.', rainfall: 20.3 },\n    { city: 'London', month: 'Jul.', rainfall: 24 },\n    { city: 'London', month: 'Aug.', rainfall: 35.6 },\n    { city: 'Berlin', month: 'Jan.', rainfall: 12.4 },\n    { city: 'Berlin', month: 'Feb.', rainfall: 23.2 },\n    { city: 'Berlin', month: 'Mar.', rainfall: 34.5 },\n    { city: 'Berlin', month: 'Apr.', rainfall: 99.7 },\n    { city: 'Berlin', month: 'May', rainfall: 52.6 },\n    { city: 'Berlin', month: 'Jun.', rainfall: 35.5 },\n    { city: 'Berlin', month: 'Jul.', rainfall: 37.4 },\n    { city: 'Berlin', month: 'Aug.', rainfall: 42.4 },\n  ],\n  transform: [{ type: 'dodgeX' }],\n  encode: {\n    x: 'month',\n    y: 'rainfall',\n    color: 'city',\n    series: 'city',\n  },\n});\n```\n\nStackY and DodgeX can be both specified explicitly.\n\n```js | dom\nG2.render({\n  type: 'interval',\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/antfincdn/mor%26R5yBI9/stack-group-column.json',\n    },\n    { type: 'stackY', series: true },\n    { type: 'dodgeX' },\n  ],\n  encode: {\n    x: 'product_type',\n    y: 'order_amt',\n    color: 'product_sub_type',\n    series: 'sex',\n  },\n});\n```\n"}