{"markdown":"# Link\n\n`Link` 标记使用两个用 (x, y) 定位的点，绘制一条带方向的直线。通过指定 `x`，`y` 通道为长度为 2 的字段数组即可。\n\n## 快速开始\n\n例如，下面我们展示了从 1980 年到 2015 年美国各个城市不断加剧的不平等（和人口）。每条线代表对一个城市的两个信息：\n\n- 1980 年和 2015 年的城市人口（x）和不平等（y）的关系。\n- 线的颜色冗余地编码了不平等的变化。\n\n```js\n(() => {\n  const chart = new G2.Chart();\n\n  chart\n    .link()\n    .data({\n      type: 'fetch',\n      value:\n        'https://gw.alipayobjects.com/os/antfincdn/SM13%24lHuYH/metros.json',\n    })\n    .encode('x', ['POP_1980', 'POP_2015'])\n    .encode('y', ['R90_10_1980', 'R90_10_2015'])\n    .encode('color', (d) => d.R90_10_2015 - d.R90_10_1980)\n    .scale('x', { type: 'log' })\n    .legend(false)\n    .axis('x', { tickFormatter: '~s', label: { autoHide: true } })\n    .style('arrow', { size: 6 });\n\n  return chart.render().node();\n})();\n```\n\n## API\n\n`Link` 对应的 shape 图形有以下，表示着使用什么样的方式去连接起止点：\n\n| shape      | 描述                                       | 示例                                                                                                                                |\n| ---------- | ------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------- |\n| link       | 连接线，默认的图形，常用于表达起止点的变化 | <img alt=\"link\" height=\"32\" src=\"https://gw.alipayobjects.com/zos/antfincdn/lmyyvRSApY/a490f7fc-fcba-44f0-baaa-894f8f442c53.png\" /> |\n| arc        | 圆弧线，常用于弧线图、弦图                 | <img alt=\"arc\" height=\"32\" src=\"https://gw.alipayobjects.com/zos/antfincdn/uq4V3te2Et/arc.jpg\" />                                   |\n| vhvEdge    | 阶梯形，常用于树图                         | <img alt=\"vhv\" height=\"32\" src=\"https://gw.alipayobjects.com/zos/antfincdn/9PquEjlmGH/vhv.jpg\" />                                   |\n| smoothEdge | 平滑曲线，常用于树图                       | <img alt=\"smoothEdge\" height=\"32\" src=\"https://gw.alipayobjects.com/zos/antfincdn/%24ZBjLbUtL9/smooth-edge.jpg\" />                  |\n\n## 使用方式\n\n除了上述绘制一个用于数据对比的直线之外，还可以用来作为一个数据的参考辅助线，让我们更清晰的看懂数据。\n\n```js | table \"pin: false\"\nincome = [\n  {\n    type: 'All workers',\n    m: 57791,\n    f: 41518,\n    age: 'total',\n  },\n  {\n    type: 'Less than 9th grade',\n    m: 26789,\n    f: 20499,\n    age: 'total',\n  },\n  {\n    type: '9th to 12th grade (no diploma)',\n    m: 31434,\n    f: 23351,\n    age: 'total',\n  },\n  {\n    type: 'High school graduate',\n    m: 42466,\n    f: 29410,\n    age: 'total',\n  },\n  {\n    type: 'Some college, no degree',\n    m: 48431,\n    f: 35916,\n    age: 'total',\n  },\n  {\n    type: 'Associate’s degree',\n    m: 51485,\n    f: 40463,\n    age: 'total',\n  },\n  {\n    type: 'Bachelor’s degree or more',\n    m: 88843,\n    f: 59052,\n    age: 'total',\n  },\n  {\n    type: 'All workers',\n    m: 26170,\n    f: 23462,\n    age: '18 to 24 years old',\n  },\n  {\n    type: 'Less than 9th grade',\n    m: 19361,\n    f: null,\n    age: '18 to 24 years old',\n  },\n  {\n    type: '9th to 12th grade (no diploma)',\n    m: 20918,\n    f: 17514,\n    age: '18 to 24 years old',\n  },\n  {\n    type: 'High school graduate',\n    m: 24974,\n    f: 20427,\n    age: '18 to 24 years old',\n  },\n  {\n    type: 'Some college, no degree',\n    m: 26957,\n    f: 21822,\n    age: '18 to 24 years old',\n  },\n  {\n    type: 'Associate’s degree',\n    m: 29698,\n    f: 26638,\n    age: '18 to 24 years old',\n  },\n  {\n    type: 'Bachelor’s degree or more',\n    m: 38275,\n    f: 32865,\n    age: '18 to 24 years old',\n  },\n  {\n    type: 'All workers',\n    m: 46181,\n    f: 38581,\n    age: '25 to 34 years old',\n  },\n  {\n    type: 'Less than 9th grade',\n    m: 23453,\n    f: 18180,\n    age: '25 to 34 years old',\n  },\n  {\n    type: '9th to 12th grade (no diploma)',\n    m: 29347,\n    f: 21955,\n    age: '25 to 34 years old',\n  },\n  {\n    type: 'High school graduate',\n    m: 37181,\n    f: 26299,\n    age: '25 to 34 years old',\n  },\n  {\n    type: 'Some college, no degree',\n    m: 41073,\n    f: 32853,\n    age: '25 to 34 years old',\n  },\n  {\n    type: 'Associate’s degree',\n    m: 42357,\n    f: 38857,\n    age: '25 to 34 years old',\n  },\n  {\n    type: 'Bachelor’s degree or more',\n    m: 67195,\n    f: 50341,\n    age: '25 to 34 years old',\n  },\n  {\n    type: 'All workers',\n    m: 63247,\n    f: 44183,\n    age: '35 to 44 years old',\n  },\n  {\n    type: 'Less than 9th grade',\n    m: 29302,\n    f: 21152,\n    age: '35 to 44 years old',\n  },\n  {\n    type: '9th to 12th grade (no diploma)',\n    m: 31018,\n    f: 24637,\n    age: '35 to 44 years old',\n  },\n  {\n    type: 'High school graduate',\n    m: 45316,\n    f: 30769,\n    age: '35 to 44 years old',\n  },\n  {\n    type: 'Some college, no degree',\n    m: 53080,\n    f: 37323,\n    age: '35 to 44 years old',\n  },\n  {\n    type: 'Associate’s degree',\n    m: 58759,\n    f: 41892,\n    age: '35 to 44 years old',\n  },\n  {\n    type: 'Bachelor’s degree or more',\n    m: 95002,\n    f: 63427,\n    age: '35 to 44 years old',\n  },\n  {\n    type: 'All workers',\n    m: 67635,\n    f: 45332,\n    age: '45 to 54 years old',\n  },\n  {\n    type: 'Less than 9th grade',\n    m: 28988,\n    f: 21633,\n    age: '45 to 54 years old',\n  },\n  {\n    type: '9th to 12th grade (no diploma)',\n    m: 35615,\n    f: 24304,\n    age: '45 to 54 years old',\n  },\n  {\n    type: 'High school graduate',\n    m: 49199,\n    f: 31984,\n    age: '45 to 54 years old',\n  },\n  {\n    type: 'Some college, no degree',\n    m: 56320,\n    f: 39785,\n    age: '45 to 54 years old',\n  },\n  {\n    type: 'Associate’s degree',\n    m: 57363,\n    f: 44191,\n    age: '45 to 54 years old',\n  },\n  {\n    type: 'Bachelor’s degree or more',\n    m: 101763,\n    f: 65001,\n    age: '45 to 54 years old',\n  },\n  {\n    type: 'All workers',\n    m: 65956,\n    f: 43870,\n    age: '55 to 64 years old',\n  },\n  {\n    type: 'Less than 9th grade',\n    m: 29913,\n    f: 19681,\n    age: '55 to 64 years old',\n  },\n  {\n    type: '9th to 12th grade (no diploma)',\n    m: 41136,\n    f: 25078,\n    age: '55 to 64 years old',\n  },\n  {\n    type: 'High school graduate',\n    m: 47741,\n    f: 31015,\n    age: '55 to 64 years old',\n  },\n  {\n    type: 'Some college, no degree',\n    m: 56120,\n    f: 40749,\n    age: '55 to 64 years old',\n  },\n  {\n    type: 'Associate’s degree',\n    m: 51978,\n    f: 39477,\n    age: '55 to 64 years old',\n  },\n  {\n    type: 'Bachelor’s degree or more',\n    m: 92223,\n    f: 64054,\n    age: '55 to 64 years old',\n  },\n  {\n    type: 'All workers',\n    m: 58565,\n    f: 38629,\n    age: '65 years old and over',\n  },\n  {\n    type: 'Less than 9th grade',\n    m: 26062,\n    f: null,\n    age: '65 years old and over',\n  },\n  {\n    type: '9th to 12th grade (no diploma)',\n    m: 32810,\n    f: 27948,\n    age: '65 years old and over',\n  },\n  {\n    type: 'High school graduate',\n    m: 42766,\n    f: 29170,\n    age: '65 years old and over',\n  },\n  {\n    type: 'Some college, no degree',\n    m: 51091,\n    f: 43082,\n    age: '65 years old and over',\n  },\n  {\n    type: 'Associate’s degree',\n    m: 48347,\n    f: 37079,\n    age: '65 years old and over',\n  },\n  {\n    type: 'Bachelor’s degree or more',\n    m: 85106,\n    f: 58288,\n    age: '65 years old and over',\n  },\n];\n```\n\n```js | dom\nincdomain = (() => {\n  const elements = []\n    .concat(\n      income.map((v) => v.m),\n      income.map((v) => v.f),\n    )\n    .filter((v) => typeof v === 'number');\n\n  return [Math.min(...elements), Math.max(...elements)];\n})();\n```\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    paddingLeft: 50,\n    paddingRight: 50,\n  });\n\n  chart\n    .link()\n    .data([1])\n    .encode('x', [() => incdomain[0], () => incdomain[1]])\n    .encode('y', [() => incdomain[0], () => incdomain[1]])\n    .label({\n      position: 'top-right',\n      text: (v) => `${v * 100}%`,\n      dx: 4,\n      textAlign: 'start',\n      textBaseline: 'middle',\n    })\n    .style('stroke', '#000');\n\n  chart\n    .link()\n    .data([0.6, 0.7, 0.8, 0.9])\n    .encode('x', [() => incdomain[0], () => incdomain[1]])\n    .encode('y', [(v) => v * incdomain[0], (v) => v * incdomain[1]])\n    .label({\n      position: 'top-right',\n      text: (v) => `${v * 100}%`,\n      dx: 4,\n      textAlign: 'start',\n      textBaseline: 'middle',\n    })\n    .style('stroke', '#000')\n    .style('opacity', 0.2);\n\n  chart\n    .point()\n    .data(income)\n    .encode('x', 'm')\n    .encode('y', 'f')\n    .encode('size', 4)\n    .encode('shape', 'hollow')\n    .style('stroke', '#000');\n\n  return chart.render().node();\n})();\n```\n\n除了上述例子之外，`Link` 标记最常用的地方，还是在关系图中，常见的有：树图、桑基图、和弦图、弧线图、力导图，具体的案例和文档可以看 [Graph](/mark-graph)。\n\n## FAQ\n\n- 怎么指定箭头头标的长度？\n\n有两种指定箭头头标长度的方式，通过填写像素值，比如 `40`，来指定为固定长度，也可以通过指定一个百分比，比如 `30%`，来指定参考箭头长度的相对长度。如下示例：\n\n```ts\nchart.link().style({\n  arrow: { size: 40 },\n  // arrow: { size: '30%' },\n});\n```\n"}