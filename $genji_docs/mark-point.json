{"markdown":"# Point\n\n## Basic Point\n\n```js\n(() => {\n  const chart = new G2.Chart();\n\n  chart\n    .point()\n    .transform({\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/basement_prod/6b4aa721-b039-49b9-99d8-540b3f87d339.json',\n    })\n    .encode('x', 'height')\n    .encode('y', 'weight')\n    .encode('color', 'gender')\n    .encode('shape', 'hollowPoint');\n\n  return chart.render().node();\n})();\n```\n\n## One Dimension\n\n```js\n(() => {\n  const chart = new G2.Chart({ height: 120 });\n\n  chart\n    .point()\n    .transform({\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/basement_prod/6b4aa721-b039-49b9-99d8-540b3f87d339.json',\n    })\n    .encode('x', 'height')\n    .encode('shape', 'hollowPoint')\n    .scale('y', { guide: null });\n\n  return chart.render().node();\n})();\n```\n\n## Size Channel\n\n```js | dom\n(() => {\n  const chart = new G2.Chart();\n\n  chart\n    .point()\n    .transform({\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/antvdemo/assets/data/bubble.json',\n    })\n    .encode('x', 'GDP')\n    .encode('y', 'LifeExpectancy')\n    .encode('size', 'Population')\n    .encode('size', 'Population')\n    .encode('color', 'continent')\n    .scale('size', { type: 'log', range: [4, 20] })\n    .style('fillOpacity', 0.3)\n    .style('lineWidth', 1);\n\n  return chart.render().node();\n})();\n```\n\n## Circle Pack\n\n```js\n(() => {\n  const width = 780;\n  const height = 780;\n  const padding = 5;\n  const layout = (data) => {\n    const root = d3.hierarchy(data);\n    root.count();\n    d3.pack().size([width, height]).padding(padding)(root);\n    return root.descendants();\n  };\n  const name = (d) => {\n    const { name } = d.data;\n    return name.length > 4 ? name.slice(0, 3) + '...' : name;\n  };\n  const chart = new G2.Chart({\n    width,\n    height,\n    paddingLeft: padding,\n    paddingTop: padding,\n    paddingBottom: padding,\n    paddingRight: padding,\n  });\n  const xy = (node) => node.encode('x', 'x').encode('y', 'y');\n\n  chart\n    .transform({\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/5155ef81-db23-49f3-b72b-d436a219d289.json',\n    })\n    .transform({ type: 'connector', callback: layout });\n\n  chart\n    .point()\n    .call(xy)\n    .encode('size', 'r')\n    .encode('color', 'height')\n    .scale('x', { domain: [0, width], guide: null })\n    .scale('y', { domain: [0, height], guide: null })\n    .scale('color', { guide: null, range: ['#30a14e', '#40c463', '#9be9a8'] })\n    .scale('size', { type: 'identity' });\n\n  chart\n    .text()\n    .transform({\n      type: 'filterBy',\n      fields: ['height'],\n      callback: (d) => d === 0,\n    })\n    .call(xy)\n    .encode('text', name)\n    .style('textAnchor', 'middle')\n    .style('fill', 'black');\n\n  return chart.render().node();\n})();\n```\n\n## Dependance\n\n```js | dom \"pin: false\"\nd3 = (async () => {\n  const { hierarchy, pack } = await genji.require('d3-hierarchy');\n  return { hierarchy, pack };\n})();\n```\n"}