{"markdown":"# Label\n\n## Label Position\n\n```js | select \"options: { labels: ['top', 'left', 'right', 'bottom', 'inside'], values: ['top', 'left', 'right', 'bottom', 'inside'] }\"\nposition = 'top';\n```\n\n```js\n(() => {\n  const chart = new G2.Chart();\n\n  chart\n    .interval()\n    .data([\n      { genre: 'Sports', sold: 275 },\n      { genre: 'Strategy', sold: 115 },\n      { genre: 'Action', sold: 120 },\n      { genre: 'Shooter', sold: 350 },\n      { genre: 'Other', sold: 150 },\n    ])\n    .encode('x', 'genre')\n    .encode('y', 'sold')\n    .encode('label', 'sold')\n    .style('label', { position });\n\n  return chart.render().node();\n})();\n```\n\n## Label in transpose\n\n```js\n(() => {\n  const chart = new G2.Chart({ paddingLeft: 72 });\n\n  chart.coordinate({ type: 'transpose' });\n\n  chart\n    .interval()\n    .data([\n      { genre: 'Sports', sold: 275 },\n      { genre: 'Strategy', sold: 115 },\n      { genre: 'Action', sold: 120 },\n      { genre: 'Shooter', sold: 350 },\n      { genre: 'Other', sold: 150 },\n    ])\n    .encode('x', 'genre')\n    .encode('y', 'sold')\n    .encode('color', 'genre')\n    .encode('label', 'sold')\n    .style('label', { position });\n\n  return chart.render().node();\n})();\n```\n\n## Label in transpose and polar\n\n```js\n(() => {\n  const chart = new G2.Chart();\n\n  chart\n    .coordinate({ type: 'transpose' })\n    .coordinate({ type: 'polar', innerRadius: 0.6 });\n\n  chart\n    .interval()\n    .data([\n      { genre: 'Sports', sold: 275 },\n      { genre: 'Strategy', sold: 115 },\n      { genre: 'Action', sold: 120 },\n      { genre: 'Shooter', sold: 350 },\n      { genre: 'Other', sold: 150 },\n    ])\n    .encode('y', 'sold')\n    .encode('color', 'genre')\n    .encode('label', 'sold')\n    // Label position supports 'inside' or 'outside', when coordinate is transpose + theta.\n    .style('label', { position: 'inside' });\n\n  return chart.render().node();\n})();\n```\n"}