{"markdown":"# Text\n\n## Basic Text\n\n```js\n(() => {\n  const chart = new G2.Chart();\n\n  chart.data([\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 350 },\n    { genre: 'Other', sold: 150 },\n  ]);\n\n  chart\n    .interval()\n    .encode('x', 'genre')\n    .encode('y', 'sold')\n    .encode('color', 'genre');\n\n  chart\n    .text()\n    .encode('x', 'genre')\n    .encode('y', 'sold')\n    .encode('text', 'sold')\n    .style('fill', 'black')\n    .style('textAlign', 'center')\n    .style('dy', -5);\n\n  return chart.render().node();\n})();\n```\n\n## WordCloud\n\n```js\n(() => {\n  const width = 640;\n  const height = 480;\n  const words = () => {\n    return (data) =>\n      data.flatMap((d) =>\n        d.words.map(({ weight, word }) => ({\n          value: weight,\n          text: word,\n          name: d.name,\n        })),\n      );\n  };\n  const layout = () => {\n    return async (data) => {\n      return new Promise((resolve) =>\n        cloud()\n          .size([width, height])\n          .words(data)\n          .padding(2)\n          .rotate(() => ~~(Math.random() * 2) * 90)\n          .fontSize((d) => d.value * 2)\n          .on('end', (data) => resolve(data))\n          .start(),\n      );\n    };\n  };\n  const chart = new G2.Chart({\n    width,\n    height,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    paddingBottom: 0,\n  });\n\n  chart\n    .text()\n    .data({\n      type: 'fetch',\n      value:\n        'https://gw.alipayobjects.com/os/bmw-prod/d345d2d7-a35d-4d27-af92-4982b3e6b213.json',\n      transform: [{ type: words }, { type: layout }],\n    })\n    .encode('x', 'x')\n    .encode('y', 'y')\n    .encode('text', 'text')\n    .encode('color', 'black')\n    .encode('rotate', 'rotate')\n    .encode('fontSize', 'size')\n    .encode('title', 'name')\n    .encode('tooltip', (d) => d.value.toFixed(2))\n    .style('textAlign', 'center')\n    .scale('x', { domain: [-width / 2, width / 2], guide: null })\n    .scale('y', {\n      domain: [-height / 2, height / 2],\n      guide: null,\n      range: [0, 1],\n    })\n    .scale('fontSize', { type: 'identity' })\n    .scale('rotate', { type: 'identity' })\n    .scale('tooltip', { type: 'identity' });\n\n  return chart.render().node();\n})();\n```\n\n## Dependance\n\n```js | dom \"pin: false\"\ncloud = genji.require('d3-cloud');\n```\n"}