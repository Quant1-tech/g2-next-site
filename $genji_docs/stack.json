{"markdown":"# Stack\n\nThe **stack** transform group marks into series by color or series channel, and then produce new y channel for each series by specified order, say to form vertical \"stacks\" by specified channels. The built-in order is as followed:\n\n- _sum_ - order stacks by ascending total value of corresponding series\n- _value_ - order stacks by ascending values of y channel\n- _series_ - order stacks by nature alphabetical order of series or color channel\n- _maxIndex_ - order stacks by the index of their max value of corresponding series\n- _a function_ - order stacks by the specified function of data\n- _an array_ - order stacks by the specified array of fields\n- _null_ - respect input order\n\nThe _reverse_ option reverse any of the above orders. And the _y_ option control wether using the ceil (_y_) or floor (_y1_) of stacked y channel as the new y channel.\n\n## Stacked Interval\n\n```js\nG2.render({\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/0afdce89-c103-479d-91f4-6cf604bcf200.json',\n    },\n  ],\n  paddingLeft: 60,\n  scale: {\n    x: {\n      guide: {\n        label: {\n          formatter: (d) =>\n            `${new Date(d.text).toLocaleString('en', { month: 'narrow' })}`,\n        },\n      },\n    },\n    y: { guide: { label: { formatter: (d) => `${+d.text / 1000}k` } } },\n  },\n  type: 'interval',\n  encode: { x: 'date', y: 'deaths', color: 'cause' },\n});\n```\n\n## Stacked Area\n\n```js\nG2.render({\n  type: 'area',\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/e58c9758-0a09-4527-aa90-fbf175b45925.json',\n    },\n    { type: 'stackY', orderBy: 'series' },\n  ],\n  scale: {\n    x: { field: 'Date', utc: true },\n    y: { guide: { label: { formatter: (d) => `${+d.text / 1000}k` } } },\n  },\n  encode: {\n    shape: 'smoothArea',\n    x: (d) => new Date(d.date),\n    y: 'unemployed',\n    color: 'industry',\n  },\n});\n```\n\n## Order By Sum\n\n```js\nG2.render({\n  type: 'area',\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/e58c9758-0a09-4527-aa90-fbf175b45925.json',\n    },\n    { type: 'stackY', orderBy: 'sum' },\n  ],\n  scale: {\n    x: { field: 'Date', utc: true },\n    y: { guide: { label: { formatter: (d) => `${+d.text / 1000}k` } } },\n  },\n  encode: {\n    shape: 'smoothArea',\n    x: (d) => new Date(d.date),\n    y: 'unemployed',\n    color: 'industry',\n  },\n});\n```\n\n## Order By Value\n\n```js\nG2.render({\n  type: 'area',\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/e58c9758-0a09-4527-aa90-fbf175b45925.json',\n    },\n    { type: 'stackY', orderBy: 'value' },\n  ],\n  scale: {\n    x: { field: 'Date', utc: true },\n    y: { guide: { label: { formatter: (d) => `${+d.text / 1000}k` } } },\n  },\n  encode: {\n    shape: 'smoothArea',\n    x: (d) => new Date(d.date),\n    y: 'unemployed',\n    color: 'industry',\n  },\n});\n```\n\nReplace _orderBy_ option with `d => d.unemployed` (function order) or `['unemployed']` (fields order)will result in same output.\n\n## Order By Max Index\n\n```js\nG2.render({\n  type: 'view',\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/f38a8ad0-6e1f-4bb3-894c-7db50781fdec.json',\n    },\n  ],\n  children: [\n    {\n      type: 'area',\n      transform: [\n        {\n          type: 'stackY',\n          orderBy: 'maxIndex',\n          reverse: true,\n        },\n      ],\n      scale: {\n        y: { guide: { label: { formatter: (d) => `${+d.text / 1000}k` } } },\n      },\n      encode: {\n        shape: 'smoothArea',\n        x: (d) => new Date(d.year),\n        y: 'revenue',\n        color: 'group',\n        series: 'format',\n      },\n    },\n    {\n      type: 'line',\n      transform: [\n        {\n          type: 'stackY',\n          orderBy: 'maxIndex',\n          reverse: true,\n          y: 'y1',\n        },\n      ],\n      encode: {\n        shape: 'smooth',\n        x: (d) => new Date(d.year),\n        y: 'revenue',\n        series: 'format',\n      },\n      style: {\n        stroke: 'white',\n      },\n    },\n  ],\n});\n```\n\n## Stacked Point\n\n```js\nG2.render({\n  type: 'view',\n  height: 360,\n  children: [\n    {\n      type: 'point',\n      transform: [\n        {\n          type: 'fetch',\n          url: 'https://gw.alipayobjects.com/os/bmw-prod/88c601cd-c1ff-4c9b-90d5-740d0b710b7e.json',\n        },\n        { type: 'stackY' },\n      ],\n      scale: {\n        color: { field: 'Gender' },\n        x: { field: 'Age →', nice: true },\n        y: {\n          field: '← Women · Men →',\n          guide: { label: { formatter: (d) => `${Math.abs(+d.text)}` } },\n        },\n      },\n      encode: {\n        x: (d) => 2021 - d.birth,\n        y: (d) => (d.gender === 'M' ? 1 : -1),\n        color: 'gender',\n      },\n    },\n    {\n      type: 'annotation.lineY',\n      data: [0],\n      encode: {\n        y: 0,\n      },\n      style: {\n        stroke: 'black',\n      },\n    },\n  ],\n});\n```\n"}