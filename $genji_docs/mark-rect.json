{"markdown":"# Rect\n\n常用于直方图、矩阵树图、聚合热力图等。\n\n\n## 开始\n\n\n```js\n(() => {\n  const width = 640;\n  const height = 480;\n  const padding = 3;\n  const layout = (data) => {\n    const root = d3.hierarchy(data);\n    root.count();\n    d3.treemap().size([width, height]).paddingLeft(padding)(root);\n    return root\n      .descendants()\n      .map((d) =>\n        Object.assign(d, {\n          x: [d.x0, d.x1,],\n          y: [d.y0,  d.y1],\n        }),\n      )\n      .filter((d) => d.height === 0);\n  };\n  const name = (d) => {\n    const { name } = d.data;\n    return name.length > 5 ? name.slice(0, 4) + '...' : name;\n  };\n  const chart = new G2.Chart({\n    width,\n    height,\n    paddingLeft: padding,\n    paddingBottom: padding,\n    paddingRight: padding,\n  });\n\n  chart.data({\n    type: 'fetch',\n    value:\n      'https://gw.alipayobjects.com/os/bmw-prod/5155ef81-db23-49f3-b72b-d436a219d289.json',\n    transform: [{ type: 'custom', callback: layout }],\n  });\n\n  chart\n    .rect()\n    .encode('x', 'x')\n    .encode('y', 'y')\n    .encode('size', 'r')\n    .encode('color', (d) => d.parent.data.name)\n    .encode('tooltip', (d) => d.parent.data.name)\n    .encode('title', '')\n    .scale('x', { domain: [0, width], guide: null })\n    .scale('y', { domain: [0, height], guide: null, range: [0, 1] })\n    .scale('color', {\n      field: '学派',\n      guide: { size: 72, autoWrap: true, maxRows: 3, cols: 6 },\n    })\n    .scale('size', { type: 'identity' })\n    .scale('tooltip', { field: '流派' });\n\n  chart\n    .text()\n    .data({\n      transform: [\n        { type: 'filterBy', fields: ['height'], callback: (d) => d === 0 },\n      ],\n    })\n    .encode('x', (d) => d.x[0])\n    .encode('y', (d) => d.y[0])\n    .encode('text', name)\n    .style('dy', '15px')\n    .style('dx', '5px')\n    .style('fill', 'black')\n    .style('textAnchor', 'start')\n    .style('fontSize', 12);\n\n  return chart.render().node();\n})();\n```\n\n## Dependance\n\n```js | dom \"pin: false\"\nd3 = (async () => {\n  const { voronoi } = await genji.require('d3-voronoi');\n  const { hierarchy, treemap } = await genji.require('d3-hierarchy');\n  return { voronoi, hierarchy, treemap };\n})();\n```\n"}