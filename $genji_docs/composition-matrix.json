{"markdown":"# Matrix\n\nMatrix is part of G2's view composition. It generates multiple plots like _Rect_, but it allows full replication of data set for each view. The encode options _x_ and _y_ will be propagated to children, and _position_ encode is a shorthand for both x and y encode.\n\n## Position\n\n```js | table\ndata = fetchJSON('https://vega.github.io/editor/data/penguins.json');\n```\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    width: 800,\n    height: 800,\n    paddingLeft: 60,\n    paddingBottom: 60,\n  });\n\n  const matrix = chart\n    .matrix()\n    .data(data)\n    .encode('position', [\n      'Beak Length (mm)',\n      'Beak Depth (mm)',\n      'Flipper Length (mm)',\n      'Body Mass (g)',\n    ]);\n\n  matrix\n    .point()\n    .encode('color', 'Species')\n    .encode('shape', 'hollowPoint')\n    .animate('enter', { type: null });\n\n  return chart.render().node();\n})();\n```\n\n## X & Y\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    width: 800,\n    paddingLeft: 50,\n    paddingBottom: 60,\n  });\n\n  const matrix = chart\n    .matrix()\n    .transform({\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/48eb9b33-9d2b-40a2-864b-6522f92ba3b9.json',\n      callback: (d) =>\n        Object.assign(d, {\n          temp_max: +d.temp_max,\n          precipitation: +d.precipitation,\n          wind: +d.wind,\n          date: new Date(d.date),\n        }),\n    })\n    .transform({\n      type: 'rename',\n      map: {\n        temp_max: 'Temp Max',\n        precipitation: 'Precipitation',\n        wind: 'Wind',\n        date: 'Date',\n        location: 'Location',\n      },\n    })\n    .encode('x', 'Date')\n    .encode('y', ['Temp Max', 'Precipitation', 'Wind']);\n\n  matrix.line().encode('color', 'Location').scale('x', { tickCount: 10 });\n\n  return chart.render().node();\n})();\n```\n"}