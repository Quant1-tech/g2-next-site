{"markdown":"# Grid\n\n> The last calendar grid has some performance issues, please wait for it to be rendered.\n\n## Ordinal Grid\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    height: 640,\n  });\n\n  chart\n    .grid()\n    .transform({\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/bd287f2c-3e2b-4d0a-8428-6a85211dce33.json',\n    })\n    .transform({\n      type: 'sortBy',\n      fields: ['y'],\n    })\n    .encode('x', 'x')\n    .encode('y', 'y')\n    .encode('color', (d) => `${d.index}`)\n    .style('stroke', 'black')\n    .style('lineWidth', 1);\n\n  return chart.render().node();\n})();\n```\n\n## Quantize Grid\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    width: 900,\n    height: 280,\n  });\n\n  chart\n    .grid()\n    .transform({\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/89c20fe8-0c6f-46c8-b36b-4cb653dba8ed.json',\n      callback: (d) => ({ salary: d }),\n    })\n    .encode('x', (_, i) => ((i / 5) | 0) + 1)\n    .encode('y', (_, i) => (i % 5) + 1)\n    .encode('color', 'salary')\n    .encode('tooltip', 'salary')\n    .scale('color', {\n      type: 'quantize',\n      domain: [10000, 100000],\n      range: ['#eee', 'pink', 'red'],\n    })\n    .style('stroke', 'black')\n    .style('lineWidth', 1);\n\n  return chart.render().node();\n})();\n```\n\n## Flex Grid\n\n```js\n(() => {\n  const chart = new G2.Chart();\n\n  chart\n    .grid()\n    .data([\n      { name: 'A', course: 'a' },\n      { name: 'A', course: 'b' },\n      { name: 'B', course: 'a' },\n      { name: 'B', course: 'b' },\n    ])\n    .encode('x', 'name')\n    .encode('y', 'course')\n    .style('stroke', 'black')\n    .style('lineWidth', 1);\n\n  return chart.render().node();\n})();\n```\n\n## Calendar Grid\n\n> This demo has some performance issues, please wait for it to be rendered.\n\n```js\n(() => {\n  const days = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n  const months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n  const week = (date) => {\n    const currentDate = date.getDate();\n    const newDate = new Date(date);\n    const firstDay = new Date(newDate.setDate(1)).getDay();\n    return Math.ceil((currentDate + firstDay) / 7);\n  };\n  const day = (date) => date.getUTCDay();\n  const month = (date) => months[date.getUTCMonth()];\n  const chart = new G2.Chart({\n    width: 960,\n    height: 2024,\n    paddingLeft: 20,\n    paddingRight: 50,\n  });\n\n  const rect = chart\n    .rect()\n    .transform({\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/dcd363de-395c-44bd-b0ad-4b5606977b97.json',\n      callback: (d) =>\n        Object.assign({}, d, {\n          Year: `${new Date(d.Date).getUTCFullYear()}`,\n          Month: month(new Date(d.Date)),\n          Date: new Date(d.Date),\n        }),\n    })\n    .transform({\n      type: 'sortBy',\n      fields: ['Year'],\n      order: 'DESC',\n    })\n    .encode('y', 'Year')\n    .encode('x', 'Month');\n\n  rect\n    .grid()\n    .encode('x', (d) => week(d.Date))\n    .encode('y', (d) => day(d.Date))\n    .encode('color', 'Volume')\n    .scale('x', { domain: [1, 2, 3, 4, 5, 6], paddingOuter: 0, guide: null })\n    .scale('y', {\n      domain: [0, 1, 2, 3, 4, 5, 6],\n      range: [0, 1],\n      guide: { formatter: (d) => days[+d] },\n    })\n    .scale('color', {\n      type: 'quantile',\n      range: ['#ebedf0', '#9be9a8', '#40c463', '#30a14e', '#216e39'],\n      guide: null,\n    })\n    .frame(false);\n\n  return chart.render().node();\n})();\n```\n"}