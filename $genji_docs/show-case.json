{"markdown":"# Customize\n\n## Donut with statistics\n\n```js\n(() => {\n  const paddingRight = 100;\n  const paddingTop = 10;\n  const chart = new G2.Chart({\n    width: 224 + paddingRight,\n    height: 224 + paddingTop * 2,\n  });\n  const layer = chart.layer();\n\n  const v1 = layer\n    .view()\n    .paddingLeft(0)\n    .paddingRight(paddingRight)\n    .paddingTop(paddingTop)\n    .paddingBottom(paddingTop);\n  v1.data([\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 350 },\n    { genre: 'Other', sold: 150 },\n  ]);\n  v1.coordinate({ type: 'theta', innerRadius: 0.68 });\n  v1.interval()\n    .encode('color', 'genre')\n    .encode('y', 'sold')\n    .scale('color', {\n      guide: { position: 'right', title: false, size: paddingRight },\n    })\n    .style({ stroke: '#fff', lineWidth: 1 });\n\n  const v2 = layer\n    .view()\n    .paddingLeft(0)\n    .paddingRight(paddingRight)\n    .paddingTop(paddingTop)\n    .paddingBottom(paddingTop);\n  const addAnnotationText = (node, data, style = {}) =>\n    node\n      .annotationText()\n      .data(data)\n      .encode('x', 'x')\n      .encode('y', 'y')\n      .encode('text', 'text')\n      .scale('x', { guide: null })\n      .scale('y', { guide: null, domain: [0, 1] })\n      .style(\n        Object.assign(\n          {\n            textAlign: 'center',\n            textBaseline: 'middle',\n            fill: '#333',\n            lineWidth: 0,\n            dx: 0,\n            dy: 0,\n          },\n          style,\n        ),\n      );\n  v2.call(addAnnotationText, [{ x: 0.5, y: 0.5, text: '前端应用数' }], {\n    fontSize: 16,\n    textBaseline: 'bottom',\n    dy: -8,\n  });\n  v2.call(addAnnotationText, [{ x: 0.5, y: 0.5, text: '38,129' }], {\n    fontSize: 32,\n    textBaseline: 'top',\n  });\n\n  return chart.render().node();\n})();\n```\n"}