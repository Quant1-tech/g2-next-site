{"markdown":"# FlexX\n\n**FlexX** 将标识按照 x 通道进行分组，通过指定的聚合函数和值计算得到每一组的权重，每一组视觉元素的宽度会和对应的权重线性相关。主要用于绘制不等宽的条形图或者马赛克图。\n\n## 开始\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    width: 1000,\n    paddingBottom: 100,\n  });\n\n  chart\n    .interval()\n    .data({\n      type: 'fetch',\n      value:\n        'https://gw.alipayobjects.com/os/bmw-prod/90873879-09d7-4842-a493-03fb560267bc.csv',\n    })\n    .transform({ type: 'flexX', field: 'gdp' })\n    .encode('x', 'country')\n    .encode('y', 'value')\n    .encode('color', 'country')\n    .axis('y', { tickFormatter: '~s' });\n\n  return chart.render().node();\n})();\n```\n\n## 选项\n\n| 参数    | 说明                                        | 类型                | 默认值  |\n| ------- | ------------------------------------------- | ------------------- | ------- |\n| field   | 指定生成权重数组的字段，优先级比 channel 高 | `string`            | -       |\n| channel | 指定生成权重数组的通道                      | `string`            | `'y'`   |\n| reducer | 聚合每一组权重的函数                        | `'sum' \\| Reducer ` | `'sum'` |\n\n## 案例\n\n**FlexX** 结合 **StackY** 以及 **NormalizeY** 可以实现如下马赛克图。\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    width: 900,\n    height: 800,\n    paddingLeft: 0,\n    paddingRight: 0,\n  });\n\n  chart\n    .interval()\n    .data({\n      type: 'fetch',\n      value:\n        'https://gw.alipayobjects.com/os/bmw-prod/3041da62-1bf4-4849-aac3-01a387544bf4.csv',\n    })\n    .transform({ type: 'flexX', reducer: 'sum' })\n    .transform({ type: 'stackY' })\n    .transform({ type: 'normalizeY' })\n    .encode('x', 'market')\n    .encode('y', 'value')\n    .encode('color', 'segment')\n    .axis('y', false)\n    .scale('x', { paddingOuter: 0, paddingInner: 0.01 })\n    .label({\n      text: 'segment',\n      x: 5,\n      y: 5,\n      textAnchor: 'start',\n      textBaseline: 'top',\n      fontSize: 10,\n      fill: '#fff',\n    })\n    .label({\n      text: 'value',\n      x: 5,\n      y: 5,\n      textAnchor: 'start',\n      dy: '1.5em',\n      fontSize: 10,\n      fill: '#fff',\n    });\n\n  return chart.render().node();\n})();\n```\n"}