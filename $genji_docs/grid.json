{"markdown":"# Grid\n\n## Ordinal Grid\n\n```js | dom\nG2.render({\n  type: 'grid',\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/bd287f2c-3e2b-4d0a-8428-6a85211dce33.json',\n    },\n    {\n      type: 'sortBy',\n      fields: ['y'],\n    },\n  ],\n  height: 640,\n  encode: {\n    x: 'x',\n    y: 'y',\n    color: (d) => `${d.index}`,\n  },\n  style: {\n    stroke: 'black',\n    lineWidth: 1,\n  },\n});\n```\n\n## Quantize Grid\n\n```js | dom\nG2.render({\n  type: 'grid',\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/89c20fe8-0c6f-46c8-b36b-4cb653dba8ed.json',\n      callback: (d) => ({ salary: d }),\n    },\n  ],\n  width: 900,\n  height: 280,\n  scale: {\n    color: {\n      type: 'quantize',\n      domain: [10000, 100000],\n      range: ['#eee', 'pink', 'red'],\n    },\n  },\n  encode: {\n    y: (_, i) => (i % 5) + 1,\n    x: (_, i) => ((i / 5) | 0) + 1,\n    color: 'salary',\n    tooltip: 'salary',\n  },\n  style: {\n    stroke: 'black',\n    lineWidth: 1,\n  },\n});\n```\n\n## Flex Grid\n\n```js | dom\nG2.render({\n  type: 'grid',\n  data: [\n    { name: 'A', course: 'a' },\n    { name: 'A', course: 'b' },\n    { name: 'B', course: 'a' },\n    { name: 'B', course: 'b' },\n  ],\n  scale: {\n    x: { flex: [2, 1] },\n    y: { flex: [1, 2] },\n  },\n  encode: {\n    y: 'name',\n    x: 'course',\n  },\n  style: {\n    stroke: 'black',\n    lineWidth: 1,\n  },\n});\n```\n"}