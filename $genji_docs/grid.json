{"markdown":"# Grid\n\n> The last calendar grid has some performance issues, please wait for it to be rendered.\n\n## Ordinal Grid\n\n```js | dom\nG2.render({\n  type: 'grid',\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/bd287f2c-3e2b-4d0a-8428-6a85211dce33.json',\n    },\n    {\n      type: 'sortBy',\n      fields: ['y'],\n    },\n  ],\n  height: 640,\n  encode: {\n    x: 'x',\n    y: 'y',\n    color: (d) => `${d.index}`,\n  },\n  style: {\n    stroke: 'black',\n    lineWidth: 1,\n  },\n});\n```\n\n## Quantize Grid\n\n```js | dom\nG2.render({\n  type: 'grid',\n  transform: [\n    {\n      type: 'fetch',\n      url: 'https://gw.alipayobjects.com/os/bmw-prod/89c20fe8-0c6f-46c8-b36b-4cb653dba8ed.json',\n      callback: (d) => ({ salary: d }),\n    },\n  ],\n  width: 900,\n  height: 280,\n  scale: {\n    color: {\n      type: 'quantize',\n      domain: [10000, 100000],\n      range: ['#eee', 'pink', 'red'],\n    },\n  },\n  encode: {\n    y: (_, i) => (i % 5) + 1,\n    x: (_, i) => ((i / 5) | 0) + 1,\n    color: 'salary',\n    tooltip: 'salary',\n  },\n  style: {\n    stroke: 'black',\n    lineWidth: 1,\n  },\n});\n```\n\n## Flex Grid\n\n```js | dom\nG2.render({\n  type: 'grid',\n  data: [\n    { name: 'A', course: 'a' },\n    { name: 'A', course: 'b' },\n    { name: 'B', course: 'a' },\n    { name: 'B', course: 'b' },\n  ],\n  scale: {\n    x: { flex: [2, 1] },\n    y: { flex: [1, 2] },\n  },\n  encode: {\n    y: 'name',\n    x: 'course',\n  },\n  style: {\n    stroke: 'black',\n    lineWidth: 1,\n  },\n});\n```\n\n## Calendar Grid\n\n> This demo has some performance issues, please wait for it to be rendered.\n\n```js | dom\n(() => {\n  const days = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n  const months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n  const week = (date) => {\n    const currentDate = date.getDate();\n    const newDate = new Date(date);\n    const firstDay = new Date(newDate.setDate(1)).getDay();\n    return Math.ceil((currentDate + firstDay) / 7);\n  };\n  const day = (date) => date.getUTCDay();\n  const month = (date) => months[date.getUTCMonth()];\n  return G2.render({\n    type: 'rect',\n    width: 960,\n    height: 2024,\n    paddingLeft: 20,\n    paddingRight: 50,\n    transform: [\n      {\n        type: 'fetch',\n        url: 'https://gw.alipayobjects.com/os/bmw-prod/dcd363de-395c-44bd-b0ad-4b5606977b97.json',\n        callback: (d) =>\n          Object.assign({}, d, {\n            Year: `${new Date(d.Date).getUTCFullYear()}`,\n            Month: month(new Date(d.Date)),\n            Date: new Date(d.Date),\n          }),\n      },\n      {\n        type: 'sortBy',\n        fields: ['Year'],\n        order: 'DESC',\n      },\n    ],\n    encode: {\n      y: 'Year',\n      x: 'Month',\n    },\n    children: [\n      {\n        type: 'grid',\n        scale: {\n          y: {\n            domain: [0, 1, 2, 3, 4, 5, 6],\n            range: [0, 1],\n            guide: { formatter: (d) => days[+d] },\n          },\n          x: { domain: [1, 2, 3, 4, 5, 6], paddingOuter: 0, guide: null },\n          color: {\n            type: 'quantile',\n            range: ['#ebedf0', '#9be9a8', '#40c463', '#30a14e', '#216e39'],\n            guide: null,\n          },\n        },\n        frame: false,\n        encode: {\n          x: (d) => week(d.Date),\n          y: (d) => day(d.Date),\n          color: 'Volume',\n        },\n      },\n    ],\n  });\n})();\n```\n"}