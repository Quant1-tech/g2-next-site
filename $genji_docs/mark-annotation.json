{"markdown":"# Annotation\n\n## Text Annotation\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    height: 300,\n    width: 640,\n  });\n\n  chart.data({\n    type: 'fetch',\n    value:\n      'https://gw.alipayobjects.com/os/antvdemo/assets/data/blockchain.json',\n    transform: [\n      {\n        type: 'fold',\n        fields: ['blockchain', 'nlp'],\n        as: ['type', 'value'],\n      },\n    ],\n  });\n\n  chart\n    .line()\n    .encode('x', (d) => new Date(d.date))\n    .encode('y', 'value')\n    .encode('color', 'type')\n    .scale('x', { guide: { label: { autoHide: 'greedy', showLast: false } } });\n\n  chart\n    .annotationText()\n    .data([{ date: '2017-12-17', value: 100 }])\n    .encode('x', (d) => new Date(d.date))\n    .encode('y', 'value')\n    .encode(\n      'text',\n      (d) => `${d.date}, 受比特币影响，blockchain 搜索热度达到峰值：${d.value}`,\n    )\n    .style('wordWrap', true)\n    .style('wordWrapWidth', 160)\n    .style('fill', '#2C3542')\n    .style('fillOpacity', 0.65)\n    .style('textAlign', 'left')\n    .style('dy', 30)\n    .style('dx', -174)\n    .style('fontSize', 10)\n    .style('lineWidth', 0)\n    .style('background', {\n      fill: '#416180',\n      fillOpacity: 0.15,\n      radius: 2,\n      padding: [2, 4],\n    })\n    .style('connector', {\n      stroke: '#416180',\n      strokeOpacity: 0.45,\n    });\n\n  return chart.render().node();\n})();\n```\n\n## Badge Annotation\n\n```js\n(() => {\n  const chart = new G2.Chart({\n    height: 300,\n    width: 640,\n  });\n\n  chart.data({\n    type: 'fetch',\n    value:\n      'https://gw.alipayobjects.com/os/antvdemo/assets/data/blockchain.json',\n    transform: [\n      {\n        type: 'fold',\n        fields: ['blockchain', 'nlp'],\n        as: ['type', 'value'],\n      },\n    ],\n  });\n\n  chart\n    .line()\n    .encode('x', (d) => new Date(d.date))\n    .encode('y', 'value')\n    .encode('color', 'type')\n    .scale('x', {\n      guide: { label: { autoHide: 'greedy', showLast: false } },\n    });\n\n  chart\n    .annotationText()\n    .data([{ date: '2017-12-17', value: 100 }])\n    .encode('x', (d) => new Date(d.date))\n    .encode('y', 'value')\n    // @todo This seems necessary in this example.\n    // The text channel should be the content rather\n    // specify it in the style again.\n    .encode(\n      'text',\n      (d) => `${d.date}, 受比特币影响，blockchain 搜索热度达到峰值：${d.value}`,\n    )\n    .encode('shape', 'annotation.badge')\n    .style('content', 'top')\n    .style('wordWrap', true)\n    .style('wordWrapWidth', 160)\n    .style('fill', '#6395FA')\n    .style('fillOpacity', 0.65)\n    .style('textAlign', 'left')\n    .style('dy', 30)\n    .style('dx', -174)\n    .style('fontSize', 10)\n    .style('connector', {\n      stroke: '#416180',\n      strokeOpacity: 0.45,\n    });\n\n  return chart.render().node();\n})();\n```\n\n## Connector Annotation\n\n```js\n(() => {\n  const chart = new G2.Chart({ height: 300 });\n\n  chart.data([\n    { genre: 'Sports', sold: 275 },\n    { genre: 'Strategy', sold: 115 },\n    { genre: 'Action', sold: 120 },\n    { genre: 'Shooter', sold: 150 },\n    { genre: 'Other', sold: 350 },\n  ]);\n\n  chart\n    .interval()\n    .encode('x', 'genre')\n    .encode('y', 'sold')\n    .encode('color', 'genre');\n\n  // @todo Maybe a transform to be more concise and readable.\n  chart\n    .annotationConnector()\n    .data([\n      { x1: 'Strategy', x2: 'Action', y1: 115, y2: 120 },\n      { x1: 'Other', x2: 'Shooter', y1: 350, y2: 150 },\n    ])\n    .encode('x', ['x1', 'x2'])\n    .encode('y', ['y1', 'y2'])\n    .style('stroke', '#979797');\n\n  return chart.render().node();\n})();\n```\n\n## RangeX Annotation\n\n```js\n(() => {\n  const chart = new G2.Chart({ width: 800 });\n\n  chart.data({\n    type: 'fetch',\n    value:\n      'https://gw.alipayobjects.com/os/bmw-prod/89a884ff-5f4e-48e8-b317-ae5b3b956bf2.json',\n    transform: [\n      {\n        type: 'fold',\n        fields: ['New York', 'San Francisco'],\n        as: ['city', 'weather'],\n      },\n    ],\n  });\n\n  chart\n    .annotationRangeX()\n    .data([{ x1: 0.6, x2: 1 }])\n    .encode('x', ['x1', 'x2'])\n    .scale('x', { independent: true, guide: null, domain: [0, 1] })\n    .style('fill', 'rgba(220,220,220,0.3)');\n\n  chart\n    .line()\n    .encode('x', (d) => new Date(d.date))\n    .encode('y', 'weather')\n    .encode('color', 'city');\n\n  return chart.render().node();\n})();\n```\n\n## RangeY Annotation\n\n```js\n(() => {\n  const chart = new G2.Chart();\n\n  chart.data({\n    type: 'fetch',\n    value:\n      'https://gw.alipayobjects.com/os/bmw-prod/2e5e34b8-229d-4503-92cb-d415106785cf.json',\n  });\n\n  chart\n    .annotationRangeY()\n    .data([{ 'Mean+stdev': 31.3305571769, 'Mean-stdev': 15.6985885518 }])\n    .encode('y', ['Mean-stdev', 'Mean+stdev'])\n    .style('fill', 'rgba(220,220,220,0.3)');\n\n  chart.point().encode('x', 'Horsepower').encode('y', 'Miles_per_Gallon');\n\n  return chart.render().node();\n})();\n```\n"}