{"markdown":"# Jitter\n\n**Jitter** 会生成随机 dy 和 dx 通道对于拥有离散的 x 和 y 通道的标识。视觉上会让点在对应的空间中随机散开，形成扰动的效果。\n\n## 开始\n\n```js\n(() => {\n  const chart = new G2.Chart();\n\n  chart\n    .point()\n    .data({\n      type: 'fetch',\n      value:\n        'https://gw.alipayobjects.com/os/antvdemo/assets/data/diamond.json',\n    })\n    .transform({ type: 'jitter' })\n    .encode('x', 'clarity')\n    .encode('color', 'clarity');\n\n  return chart.render().node();\n})();\n```\n\n## 选项\n\n| 参数     | 说明                                          | 类型           | 默认值      |\n| -------- | --------------------------------------------- | -------------- | ----------- |\n| padding  | 空间之间的间隔                                | `number`       | 0           |\n| paddingX | 水平之间的间隔                                | `number`       | 0           |\n| paddingY | 竖直之间的间隔                                | `number`       | 0           |\n| random   | 自定义随机数生成器，需要返回 \\[0, 1) 之间的值 | `() => number` | Math.random |\n\n## 案例\n\n```js\n(() => {\n  const chart = new G2.Chart();\n\n  chart.coordinate({ type: 'polar' });\n\n  chart\n    .point()\n    .data({\n      type: 'fetch',\n      value:\n        'https://gw.alipayobjects.com/os/antvdemo/assets/data/diamond.json',\n    })\n    .transform({ type: 'jitter', paddingX: 0.05, paddingY: 0.05 })\n    .encode('x', 'clarity')\n    .encode('y', 'cut')\n    .encode('color', (d) => `(${d.clarity}, ${d.cut})`)\n    .encode('shape', 'point')\n    .axis('y', false)\n    .legend(false)\n    .scale('x', { padding: 0.5 })\n    .scale('y', { padding: 0.5 });\n\n  return chart.render().node();\n})();\n```\n"}